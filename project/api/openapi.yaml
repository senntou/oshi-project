openapi: 3.0.0

info:
  title: Go API
  description: local go api
  version: 1.0.0

servers:
  - url: http://localhost:5000

components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      description: Authorization header using the Bearer scheme.

  schemas:
    HealthCheckResponse:
      type: object
      properties:
        status:
          type: string
      required:
        - status

    Category:
      type: string
      enum: [ANIME, RADIO, LIVE, EVENT, PROGRAM, ANNIVERSARY, OTHER]

    Season:
      type: string
      enum: [SPRING, SUMMER, AUTUMN, WINTER]

    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name

    Actor:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name

    SpecificDateEvent:
      type : object
      properties:
        date:
          type: string
        customTitle:
          type: string
      required:
        - date
        - customTitle

    ContentResponse:
      type: object
      properties:
        id: 
          type: string
        actorId:
          type: string
        title:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        description:
          type: string
        scheduleType:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        year:
          type: integer
        season:
          $ref: '#/components/schemas/Season'
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - id
        - actorId
        - title
        - category
        - scheduleType
        - createdAt
        - updatedAt

    UsersMeResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
      required:
      - user

    AnimeContent:
      type: object
      properties:
        contentId:
          type: string
        title:
          type: string
        description:
          type: string
        year:
          type: integer
        season:
          $ref: '#/components/schemas/Season'
      required:
        - contentId
        - title
        - description
        - year
        - season

    SeasonContentRequestBody:
      type: object
      properties:
        userId:
          type: string
        title:
          type: string
        description:
          type: string
        year:
          type: integer
        season:
          $ref: '#/components/schemas/Season'
      required:
        - userId
        - title
        - description
        - year
        - season

    RadioContent:
      type: object
      properties:
        contentId:
          type: string
        title:
          type: string
        description:
          type: string
        scheduleType:
          type: string
        startDate:
          type: string
        endDate:
          type: string
      required:
        - contentId
        - title
        - description
        - scheduleType
        - startDate
        - endDate

    LiveContent:
      type: object
      properties:
        contentId:
          type: string
        title:
          type: string
        description:
          type: string
        specificDateEvent:
          type: array
          items:
            $ref: '#/components/schemas/SpecificDateEvent'
      required:
        - contentId
        - title
        - description
        - specificDateEvent

    ContentList:
      type: object
      properties:
        anime:
          type: array
          items:
            $ref: '#/components/schemas/AnimeContent'
        radio:
          type: array
          items:
            $ref: '#/components/schemas/RadioContent'
        live:
          type: array
          items:
            $ref: '#/components/schemas/LiveContent'
      required:
        - anime
        - radio
        - live

    ActorsResponse:
      type: object
      properties:
        actors:
          type: array
          items:
            $ref: '#/components/schemas/Actor'
      required:
          - actors

    ActorContentsResponse:
      type: object
      properties:
        Actor:
          $ref: '#/components/schemas/Actor'
        contents:
          $ref: '#/components/schemas/ContentList'
      required:
        - Actor
        - contents

paths:
  /healthcheck:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
          description: 情報の取得成功
      summary: ヘルスチェック用エンドポイント

  /v1/actors:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorsResponse'
          description: Success
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error

  /v1/actors/{actorId}/contents:
    get:
      parameters:
        - name: actorId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorContentsResponse'
          description: Success
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: 演者のコンテンツ一覧を取得するエンドポイント

  /v1/actors/{actorId}/contents/season:
    post:
      parameters:
        - name: actorId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeasonContentRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResponse'
          description: Success
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
        - bearer: []
      summary: Season型のコンテンツを作成するエンドポイント

  /v1/users/me:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersMeResponse"
          description: Success
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
        - bearer: []
      summary: ユーザー情報の取得用エンドポイント
